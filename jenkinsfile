pipeline {
    agent any

    environment {
        COMPOSE_PROJECT_NAME = "voting"
        UI_SERVICE = "voting-ui"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build & Run Voting System') {
            steps {
                script {
                    echo "üì¶ Building and starting Voting UI and MySQL with Docker Compose..."
                    sh '''
                        docker-compose down || true
                        docker-compose up -d --build
                    '''
                }
            }
        }

        stage('Health Check') {
            steps {
                script {
                    echo "üîç Waiting for the voting UI to respond..."
                    sleep 15
                    def status = sh(script: "curl -s -o /dev/null -w '%{http_code}' http://localhost", returnStdout: true).trim()
                    if (status != '200') {
                        error("‚ùå Voting UI is not responding (HTTP ${status})")
                    } else {
                        echo "‚úÖ Voting UI is running successfully (HTTP ${status})"
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'üéâ Deployment pipeline succeeded!'
        }

        failure {
            echo '‚ùå Deployment pipeline failed. Displaying logs...'
            script {
                sh 'docker-compose logs voting-ui || true'
                sh 'docker-compose logs mysql-db || true'
            }
        }

        always {
            echo 'üßπ Cleaning up Docker containers...'
            script {
                sh 'docker-compose down || true'
            }
        }
    }
}
