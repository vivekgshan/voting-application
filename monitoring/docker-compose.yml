version: '3.8'

services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:9090"]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/login"]
      interval: 10s
      timeout: 5s
      retries: 5

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager/:/etc/alertmanager/
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
    command:
      - "--config.file=/etc/alertmanager/config.yml"
    networks:
      - monitoring-net

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    networks:
      - monitoring-net
    ports:
      - "9100:9100"
    restart: unless-stopped

  mysqld-exporter:
    image: prom/mysqld-exporter
    container_name: mysqld-exporter
    environment:
      - DATA_SOURCE_NAME=root:rootpass@(mysql-db:3306)/
    networks:
      - monitoring-net
    ports:
      - "9104:9104"
    depends_on:
      - mysql-db
    restart: unless-stopped

  php-voting-app:
    build: ./php-voting-app
    container_name: php-voting-app
    ports:
      - "8080:80"
    networks:
      - monitoring-net
    restart: unless-stopped

  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      - MYSQL_ROOT_PASSWORD=rootpass
      - MYSQL_DATABASE=votingdb
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - monitoring-net
    restart: unless-stopped

volumes:
  mysql-data:

networks:
  monitoring-net:
    driver: bridge
    external: true
